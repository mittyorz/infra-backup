#!/bin/sh

if [ $# -eq 0 ]; then
    echo "usage: $0 instance"
    exit 1
fi

warn () {
    [ -z "$1" ] && return 0
    echo -n "$0: "
    echo $1
}

isexist () {
    [ -e "$1" ] && return 0
    warn "$1 does not exist"
    exit 1
}


# initialize
INSTANCE="$1"
CONFFILE="/etc/mirror/${INSTANCE}.conf"
isexist "$CONFFILE"

# set default vars
LOGDIR='/var/log/rsync'
LOCKDIR='/var/lock'

# load configuration
. $CONFFILE

# check configuration
checkvar () {
    unset _checkvar
    eval "_checkvar=\$$1"
    if [ -z "$_checkvar" ]; then
        warn "$1 is need to be set in '$CONFFILE'"
        exit 1
    fi
}

checkvar MIRRORHOST
checkvar MIRRORTARGET

[ -z "$RSYNCOPT" ] && {
    RSYNCOPT="--quiet -rlpt --hard-links --delete --delete-after --delay-updates --safe-links --timeout 600"
}
MIRRORLOG=$LOGDIR/mirror.${INSTANCE}.log

isexist "$MIRRORTARGET"


# set lock
LOCKDIR=$LOCKDIR/mirror.${INSTANCE}.lock
cleanup () {
    rmdir $LOCKDIR
}

mkdir $LOCKDIR || exit 1
trap cleanup EXIT HUP INT TERM


# check connectivity of host
[ ! -z "$PINGHOST" ] && {
    ping -c 1 $PINGHOST > /dev/null
    if [ $? -ne 0 ]; then
        warn "$PINGHOST seems to be down (ping)"
        exit 1
    fi
}


# ready to rsync
rsync --log-file=$MIRRORLOG $RSYNCOPT \
    $MIRRORHOST $MIRRORTARGET

if [ $? -ne 0 ]; then
    warn "something wrong on rsync"
    exit 1
fi
